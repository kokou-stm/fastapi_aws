name: Deploy FastAPI to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH Key
      env:
        KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "$KEY" > private_key.pem
        chmod 600 private_key.pem

    - name: Ensure SSH folder exists and add EC2 to known hosts
      env:
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        mkdir -p ~/.ssh  # ✅ Création du dossier si absent
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

    - name: Copy files to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        scp -i private_key.pem docker-compose.yml $USER@$HOST:/home/$USER/
        # scp -i private_key.pem .env $USER@$HOST:/home/$USER/  # Si un fichier .env est utilisé
    
    - name: Fix Docker permissions
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i private_key.pem $USER@$HOST << 'EOF'
          sudo usermod -aG docker $USER
          newgrp docker
        EOF


    - name: Install Docker Compose on EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i private_key.pem $USER@$HOST << 'EOF'
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
        EOF



    - name: Deploy on EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i private_key.pem $USER@$HOST << 'EOF'
          cd /home/$USER/
          docker-compose down  # Arrête l'ancien conteneur si nécessaire
          docker-compose up -d --build  # Redémarre avec la nouvelle image
        EOF

    - name: Clean up
      run: rm -f private_key.pem
